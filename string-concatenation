### 1
string author = "Mahesh Chand";
string book = "C# Programming";
// Use string interpolation to concatenate strings.
string bookAuthor = $"{author} is the author of {book}.";
Console.WriteLine(bookAuthor);
###

### 2
int[] intArray = { 1, 3, 5, 7, 9 };

String seperator = ", ";
string result = "Int, ";
result += String.Join(seperator, intArray);
Console.WriteLine($"Result: {result}");
###

### 3
string[] intArray = { "Aakash","T","L" };

String seperator = ", ";
string result = "";
result += String.Join(seperator, intArray);
Console.WriteLine($"Result: {result}");
###

### 4
The following code example in Listing 8 concatenates an array element separated by a separator.
The second and third parameters of String.Join method specified the starting index of the array to start joining the number of elements in the array.

String[] arr2 = { "Mahesh Chand ", "Chris Love ", "Dave McCarter ", "Praveen Kumar " };
String seperator2 = ", ";
string result2 = "First Author, ";
result2 += String.Join(seperator2, arr2, 1, 2);
Console.WriteLine($"Result: {result2}");
###

### 5
 CommonHelper.ConcateStringWithComma(exceptionList)
 public class CommonHelper
    {
        public static string ConcateStringWithComma(List<string> ObjList)
        {
            StringBuilder builder = new StringBuilder();
            foreach (string s in ObjList)
            {
                if (s != null && s != "")
                    builder.Append(s).Append(", ");
            }
            return builder.ToString().TrimEnd(new char[] { ',', ' ' });
        }
    }

###


